"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/books/page",{

/***/ "(app-pages-browser)/./src/lib/supabase/books.ts":
/*!***********************************!*\
  !*** ./src/lib/supabase/books.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bookService: function() { return /* binding */ bookService; }\n/* harmony export */ });\n/* harmony import */ var _supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/auth-helpers-nextjs */ \"(app-pages-browser)/./node_modules/@supabase/auth-helpers-nextjs/dist/index.js\");\n/* harmony import */ var _supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_0__);\n\nconst supabase = (0,_supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_0__.createClientComponentClient)();\nconst bookService = {\n    // Get all books with optional filters\n    async getBooks () {\n        let filters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        let query = supabase.from(\"books\").select(\"\\n        *,\\n        category:categories(id, name, color, icon),\\n        vocabulary_group_books(\\n          vocabulary_group:vocabulary_groups(\\n            id,\\n            name,\\n            difficulty\\n          )\\n        )\\n      \").order(\"created_at\", {\n            ascending: false\n        });\n        // Apply filters\n        if (filters.search) {\n            query = query.or(\"title.ilike.%\".concat(filters.search, \"%,author.ilike.%\").concat(filters.search, \"%,description.ilike.%\").concat(filters.search, \"%\"));\n        }\n        if (filters.author) {\n            query = query.ilike(\"author\", \"%\".concat(filters.author, \"%\"));\n        }\n        if (filters.categoryId) {\n            query = query.eq(\"category_id\", filters.categoryId);\n        }\n        if (filters.contentType) {\n            query = query.eq(\"content_type\", filters.contentType);\n        }\n        if (filters.language) {\n            query = query.eq(\"language\", filters.language);\n        }\n        if (filters.publicationYear) {\n            query = query.eq(\"publication_year\", filters.publicationYear);\n        }\n        if (filters.isPublic !== undefined) {\n            query = query.eq(\"is_public\", filters.isPublic);\n        }\n        if (filters.tags && filters.tags.length > 0) {\n            query = query.contains(\"tags\", filters.tags);\n        }\n        const { data, error } = await query;\n        if (error) throw error;\n        return data;\n    },\n    // Get single book by ID\n    async getBook (id) {\n        const { data, error } = await supabase.from(\"books\").select(\"\\n        *,\\n        category:categories(id, name, color, icon),\\n        course_books(\\n          id,\\n          course_id,\\n          is_required,\\n          notes,\\n          position,\\n          course:courses(id, title, status)\\n        )\\n      \").eq(\"id\", id).single();\n        if (error) throw error;\n        return data;\n    },\n    // Create new book\n    async createBook (bookData) {\n        const { data: user } = await supabase.auth.getUser();\n        if (!user.user) throw new Error(\"User not authenticated\");\n        // Set default language if not provided\n        const dataWithDefaults = {\n            ...bookData,\n            language: bookData.language || \"en\",\n            is_public: bookData.is_public || false,\n            user_id: user.user.id\n        };\n        const { data, error } = await supabase.from(\"books\").insert(dataWithDefaults).select().single();\n        if (error) throw error;\n        return data;\n    },\n    // Update book\n    async updateBook (param) {\n        let { id, ...bookData } = param;\n        const { data, error } = await supabase.from(\"books\").update({\n            ...bookData,\n            updated_at: new Date().toISOString()\n        }).eq(\"id\", id).select().single();\n        if (error) throw error;\n        return data;\n    },\n    // Delete book\n    async deleteBook (id) {\n        const { error } = await supabase.from(\"books\").delete().eq(\"id\", id);\n        if (error) throw error;\n    },\n    // Get book statistics\n    async getBookStats () {\n        const { data: user } = await supabase.auth.getUser();\n        if (!user.user) throw new Error(\"User not authenticated\");\n        const { data, error } = await supabase.from(\"books\").select(\"content_type\", {\n            count: \"exact\"\n        }).eq(\"user_id\", user.user.id);\n        if (error) throw error;\n        const stats = {\n            total: (data === null || data === void 0 ? void 0 : data.length) || 0,\n            text: (data === null || data === void 0 ? void 0 : data.filter((b)=>b.content_type === \"text\").length) || 0,\n            video: (data === null || data === void 0 ? void 0 : data.filter((b)=>b.content_type === \"video\").length) || 0,\n            audio: (data === null || data === void 0 ? void 0 : data.filter((b)=>b.content_type === \"audio\").length) || 0,\n            pdf: (data === null || data === void 0 ? void 0 : data.filter((b)=>b.content_type === \"pdf\").length) || 0,\n            other: (data === null || data === void 0 ? void 0 : data.filter((b)=>[\n                    \"image\",\n                    \"interactive\"\n                ].includes(b.content_type)).length) || 0\n        };\n        return stats;\n    },\n    // Get unique authors\n    async getAuthors () {\n        const { data: user } = await supabase.auth.getUser();\n        if (!user.user) throw new Error(\"User not authenticated\");\n        const { data, error } = await supabase.from(\"books\").select(\"author\").eq(\"user_id\", user.user.id).not(\"author\", \"is\", null);\n        if (error) throw error;\n        // Extract unique authors\n        const authorsSet = new Set(data === null || data === void 0 ? void 0 : data.map((book)=>book.author).filter(Boolean));\n        const authors = Array.from(authorsSet).sort();\n        return authors;\n    },\n    // Get unique languages\n    async getLanguages () {\n        const { data: user } = await supabase.auth.getUser();\n        if (!user.user) throw new Error(\"User not authenticated\");\n        const { data, error } = await supabase.from(\"books\").select(\"language\").eq(\"user_id\", user.user.id);\n        if (error) throw error;\n        // Extract unique languages\n        const languagesSet = new Set(data === null || data === void 0 ? void 0 : data.map((book)=>book.language).filter(Boolean));\n        const languages = Array.from(languagesSet).sort();\n        return languages;\n    },\n    // Get content type options\n    getContentTypes () {\n        return [\n            {\n                value: \"text\",\n                label: \"Text\",\n                icon: \"\\uD83D\\uDCC4\"\n            },\n            {\n                value: \"pdf\",\n                label: \"PDF\",\n                icon: \"\\uD83D\\uDCD1\"\n            },\n            {\n                value: \"video\",\n                label: \"Video\",\n                icon: \"\\uD83C\\uDFA5\"\n            },\n            {\n                value: \"audio\",\n                label: \"Audio\",\n                icon: \"\\uD83C\\uDFA7\"\n            },\n            {\n                value: \"image\",\n                label: \"Image\",\n                icon: \"\\uD83D\\uDDBCÔ∏è\"\n            },\n            {\n                value: \"interactive\",\n                label: \"Interactive\",\n                icon: \"\\uD83C\\uDFAE\"\n            }\n        ];\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/supabase/books.ts\n"));

/***/ })

});